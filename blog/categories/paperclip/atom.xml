<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: paperclip | Hao's Thoughts]]></title>
  <link href="https://leomayleomay.github.io/blog/categories/paperclip/atom.xml" rel="self"/>
  <link href="https://leomayleomay.github.io/"/>
  <updated>2014-05-26T08:25:09+08:00</updated>
  <id>https://leomayleomay.github.io/</id>
  <author>
    <name><![CDATA[Hao Liu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Polymorphic image styles with Paperclip]]></title>
    <link href="https://leomayleomay.github.io/blog/2013/07/30/polymorphic-image-styles-using-paperclip/"/>
    <updated>2013-07-30T15:02:00+08:00</updated>
    <id>https://leomayleomay.github.io/blog/2013/07/30/polymorphic-image-styles-using-paperclip</id>
    <content type="html"><![CDATA[<p>You may have ran into the following scenario that your rails app having 1+ domain models having image with them, say <code>Album</code> has one <code>cover</code>, <code>User</code> has one <code>avatar</code>:</p>

<p>```ruby</p>

<p>class Image &lt; ActiveRecord::Base
  belongs_to :viewable, :polymorphic => true</p>

<p>  validate :viewable, :presence => true</p>

<p>  has_attached_file :attachment
end</p>

<p>class User &lt; ActiveRecord::Base
  has_one :avatar, :class_name => "Image", :as => :viewable, :dependent => :destroy
end</p>

<p>class Album &lt; ActiveRecord::Base
  has_one :cover, :class_name => "Image", :as => :viewable, :dependent => :destroy
end</p>

<p>```</p>

<p>As you can see, an image belongs to a <code>viewable</code> object, the <code>viweable</code> object could be an instance of <code>User</code> or <code>Album</code> or anything else.</p>

<p>The presumption here is that the <code>cover</code> is having a set of styles different from with the <code>avatar</code>, but we only have one <code>Image</code> class, what are we supposed to do? We dispatch. We let the <code>viewable</code> object decide the styles of the image.</p>

<p>```ruby
class Image &lt; ActiveRecord::Base
  belongs_to :viewable, :polymorphic => true</p>

<p>  validate :viewable, :presence => true</p>

<p>  has_attached_file :attachment,</p>

<pre><code>:styles =&gt; Proc.new {|a| a.instance.viewable.image_styles}
</code></pre>

<p>end</p>

<p>class User &lt; ActiveRecord::Base
  has_one :avatar, :class_name => "Image", :as => :viewable, :dependent => :destroy</p>

<p>  def image_styles</p>

<pre><code>{
  :thumb =&gt; "30x30&gt;",
  :medium =&gt; "100x100&gt;"
}
</code></pre>

<p>  end
end</p>

<p>class Album &lt; ActiveRecord::Base
  has_one :cover, :class_name => "Image", :as => :viewable, :dependent => :destroy</p>

<p>  def image_styles</p>

<pre><code>{
  :cart =&gt; "50x50&gt;"
  :large =&gt; "300x300&gt;"
}
</code></pre>

<p>  end
end
```</p>

<p>We now have one <code>Image</code> class having different styles for different <code>viewable</code> objects, we can also do the same thing to <code>default_url</code> and <code>path</code>. Leave me a comment if you have better solution, thanks a lot.</p>
]]></content>
  </entry>
  
</feed>
